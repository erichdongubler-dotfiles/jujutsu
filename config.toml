"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

# # Template for `watchman` repository usage, if needed.
# core.fsmonitor = "watchman"
# core.watchman = { register-snapshot-trigger = true }

[aliases]
ab = ["abandon"]
all = ["pl", "--revisions=all() | tags()"]
bkmk = ["bookmark"]
cleanup = ["pl", "--revisions=bookmarks() & immutable()"]
commit-id = [
  "log",
  "--no-graph",
  '--template=self.commit_id() ++ "\n"',
  "--revisions",
]
conflicts = ["pl", "--revisions=show_conflicts()"]
downstream = [
  "pl",
  "--revisions=ancestors(immutable()..@, 2) | descendants(immutable()..@)",
]
down = ["downstream"]
dup = ["duplicate"]
fixup-line = [
  "log",
  "--no-graph",
  "--template=\"fixup! \" ++ description.first_line()",
  "--revisions",
]
fresh = ["new", "trunk()"]
iwc = ["--ignore-working-copy"]
me = ["pl", "--revisions=show_me()"]
mine = ["pl", "--revisions=show_mine()"]
msg-line = [
  "log",
  "--no-graph",
  "--template=description.first_line()",
  "--revisions",
]
mutable = ["pl", "--revisions=show_mutable()"]
mut = ["mutable"]
np = ["--no-pager"]
pl = ["log", "--template=erichdongubler_preferred()"]
reach = ["reachable"]
reachable = ["pl", "--revisions=show_reachable_mut(@)"]
refresh = ["rebase", "-d", "trunk()"]
rev-parse = [
  "log",
  "--no-graph",
  "--no-pager",
  "--color=never",
  "--template=self.commit_id() ++ '\n'",
  "--revisions",
]
review = ["pl", "--revisions=show_review(@ | trunk())"]
sq = ["squash"]
stack = ["pl", "--revisions=show_stack(@)"]
trunk = ["pl", "--revisions=..trunk()"]
unsynced = ["pl", "--revisions=mutable() ~ ancestors(remote_bookmarks())"]
upstream = ["pl", "--revisions=::@"]
up = ["upstream"]
wip = ["mut", "--revisions=working_copies()"]

[colors]
"bookmark" = { fg = "bright green", bold = true }
"bookmark remote" = "red"
"change_id" = "bright magenta"
"commit_id" = "bright blue"
"description" = "default"
"description placeholder" = "bright black"
"elided" = "bright black"
"email" = "bright black"
"empty description placeholder" = "bright black"
"empty" = "bright black"
"erichdongubler_dash_fluff" = "bright black"
"git_head" = { fg = "cyan", bold = true }
"git_refs" = "green"
"tag" = { fg = "yellow", bold = true }
"tags" = { fg = "yellow", bold = true }
"author timestamp" = "green"
"author" = "bright black"
"committer" = "bright black"
"committer timestamp" = "green"
"working_copy" = { fg = "bright green", bold = true }
"working_copy bookmark" = { fg = "bright green", bold = true }
"working_copy bookmark remote" = { fg = "red", bold = true }
"working_copy change_id" = { bold = true }
"working_copy commit_id" = { bold = true }
"working_copy description placeholder" = { fg = "bright black", bold = true, underline = true }
"working_copy description" = { fg = "bright white", bold = true, underline = true }
"working_copy git_refs" = {}
"working_copy email" = { bold = true }
"working_copy empty" = { bold = true }
"working_copy empty description placeholder" = { bold = true }
"working_copy empty timestamp" = "green"
"working_copy timestamp" = "green"
"working_copy author" = { bold = true }
"working_copy committer" = { bold = true }

# Nodes in `log` graph output
# Stolen and modified from
# <https://github.com/martinvonz/jj/blob/4c57a8868fa175ada435bce96e3805da8607f4b9/cli/src/config/colors.toml#L94-L98>.
"node" = { fg = "yellow", bold = true }
"node elided" = "bright black"
"node working_copy" = { fg = "yellow", bold = true }
"node working_copy mine" = { fg = "green", bold = true }
"node immutable" = "cyan"
"node immutable mine" = "blue"
"node conflict" = { fg = "red", bold = true }
"node mine" = "green"

# Nodes in `op` graph output
# Stolen and modified from
# <https://github.com/martinvonz/jj/blob/4c57a8868fa175ada435bce96e3805da8607f4b9/cli/src/config/colors.toml#L86-L92>.
"op_log current_operation" = { color = "bright white", bold = true }

[git]
push-bookmark-prefix = "erichdongubler/push-"
subprocess = true

[merge-tools]
p4merge.merge-args = ["$base", "$left", "$right", "$output"]

[revset-aliases]
"imm_parents(x)" = "heads(ancestors(immutable()..x, 2))"
"show_conflicts()" = "show_reachable_mut(conflicts() & mutable())"
"show_fork_point(x)" = "x | fork_point(x)"
"show_imm_parents(x)" = "show_fork_point(x | trunk()) | imm_parents(x)"
"show_me()" = "show_reachable_mut(mine()) | show_imm_parents(@)"
"show_mine()" = "show_fork_point(@ | trunk()) | mine()"
"show_mutable()" = "ancestors(mutable(), 2) | trunk() | bookmarks()"
"show_reachable_mut(x)" = "ancestors(reachable(x, mutable()), 2)"
"show_stack(x)" = "show_fork_point(x | trunk()) | ancestors(immutable()..x, 2)"
"show_stacks(x)" = "show_fork_point(x | trunk()) | show_reachable_mut(x)"
"show_review(x)" = "fork_point(x)::x"

[revsets]
short-prefixes = "show_reachable_mut(mutable())" # Otherwise, this would be the `log` revset.

[snapshot]
auto-update-stale = true

[templates]
log_node = "erichdongubler_log_node()"
op_log_node = "erichdongubler_op_node()"

[template-aliases]
# Stolen and modified from
# <https://github.com/martinvonz/jj/blob/4c57a8868fa175ada435bce96e3805da8607f4b9/cli/src/config/templates.toml#L225-L242>
"erichdongubler_log_node()" = '''
coalesce(
	if(!self, label("elided", "~")),
	label(
		separate(" ",
			if(current_working_copy, "working_copy"),
			if(immutable, "immutable"),
			if(conflict, "conflict"),
			if(mine, "mine"),
		),
		coalesce(
			if(current_working_copy, "@"),
			if(immutable, "+"),
			if(conflict, "x"),
			"*",
		),
	),
)
'''
"erichdongubler_op_node()" = '''
coalesce(
	if(current_operation, label("current_operation", "@")),
	"o",
)
'''
"erichdongubler_preferred()" = '''
if(
	root,
	format_root_commit(self),
	label(if(current_working_copy, "working_copy"),
		concat(
			separate(" ",
				label("erichdongubler_dash_fluff", "---"),
				format_short_change_id_with_hidden_and_divergent_info(self),
				format_short_commit_id(commit_id),
				label("erichdongubler_dash_fluff", "-"),
				bookmarks,
				tags,
				working_copies,
				if(git_head, label("git_head", "HEAD")),
				if(conflict, label("conflict", "conflict")),
			),
			"\n",
			separate(" ",
				if(empty, label("empty", "(empty)")),
				if(description, description.first_line(), description_placeholder),
				label("author", if(author.name(), author.name(), email_placeholder)),
				format_timestamp(committer.timestamp()),
			),
		),
	),
)
'''
"format_timestamp(timestamp)" = 'label("timestamp", timestamp.ago())'
"format_short_signature(signature)" = "signature.name()"

[ui]
default-command = "stack"
merge-editor = "p4merge"
pager = ":builtin"

[user]
name = "Erich Gubler"
email = "erichdongubler@gmail.com"
